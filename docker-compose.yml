version: '3.4'
services:  
 db:
    image: postgres
    container_name: postgreSQL
    restart: always
    ports:
      - "2345:5432" 
      # - "5432:2345" 
    environment:
      PGDATA: /var/lib/postgresql/pgdata-dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ggdu6599)dhfb
      POSTGRES_DB: devdb
    volumes:
      - $HOME/docker/volumes/postgres:/var/lib/postgresql/pgdata-dev




 auth-service:
    image: auth-service
    container_name: Auth-Service
    restart: always
    build:
      context: '../auth-service'
      dockerfile: 'Dockerfile'
    ports:
      - 3003:3000
    env_file:
      - ../auth-service/env/local.env
    volumes:
      - ../auth-service:/app     
    depends_on:
      - kafka
      - db

      
#  php:
#     image: php-app
#     container_name: PHP-App
#     restart: always
#     build:
#       context: '../php-app'
#       dockerfile: 'Dockerfile'
#     ports:
#       - "8080:80"
#     # env_file:
#     #   - ../data-api/env/local.env
#     volumes:
#       # - "../php-app:/var/www/html"
#       - './php-app:/doc/src'
#     depends_on:
#       - db


 zookeeper:
    container_name: zookeeper
    # restart: always
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./zookeeper-data:/var/lib/zookeeper/data
      - ./zookeeper-log:/var/lib/zookeeper/log

 kafka:
    container_name: kafka
    # restart: always
    image: confluentinc/cp-kafka:latest
    labels:
      - 'custom.project=kafkajs-zstd'
      - 'custom.service=kafka'
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=ERROR,kafka.producer.async.DefaultEventHandler=ERROR,state.change.logger=ERROR'
      CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
      KAFKA_ADVERTISED_HOST_NAME: kafka
    volumes:
      - ./kafka-data:/var/lib/kafka/data
    command: ["bash", "-c", "rm -rf /var/lib/kafka/data/meta.properties"]
